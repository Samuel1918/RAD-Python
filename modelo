import sqlite3
class AppBD():
    def __init__(self):
        self.create_table() #QUANDO A CLASSE É INSTANCIADA, CRIA A TABELA NO BANCO DE DADOS
    def abrirConexao(self):
        try:
            self.connection = sqlite3.connect('database.db') #ABRE A CONEXÃO
        except sqlite3.Error as error:
            print("Falha ao se conectar ao Banco de dados", error)
    def create_table(self):
        self.abrirConexao()
        create_table_query = '''CREATE TABLE IF NOT EXISTS Products (id INTEGER PRIMARY KEY AUTOINCREMENT,
          name TEXT NOT NULL, 
          price REAL NOT NULL);'''
        try: 
            cursor = self.connection.cursor()
            cursor.execute(create_table_query) 
        except sqlite3.Error as error:
            print("Falha ao criar tabela", error)
        finally:
            if self.connection:
                cursor.close()
                self.connection.close()
                print("A conexão com o sqlite foi fechada!")
    def inserirDados(self):
        self.abrirConexao()
        insert_query = '''INSERT INTO Products(name, price) VALUES (?,?)'''
        try:
            cursor = self.connection.cursor()
            cursor.execute(insert_query,(name,price))
            self.connection.commit()
            print("Produto inserido com sucesso!")
        except sqlite3.Error as error:
            print("Falha ao inserir dados", error)
        finally:
            if self.connection:
                cursor.close()
                self.connection.close()
                print("A conexão com sqlite foi fechada!")
    def select_all_products(self):
        self.abrirConexao()
        select_query = "SELECT * FROM Products"
        Products = []
        try:
            cursor = self.connection.cursor()
            cursor.execute(select_query)
            Products = cursor.fetchall() #RECUEPERA OS REGISTROS NO BANCO
        except sqlite3.Error as error:
            print("Falha ao retornar produtos", error)
        finally:
            if self.connection:
                cursor.close()
                self.connection.close()
                print("a conexão com o sqlite foi fechada!")
        return Products 
